# -*- coding: utf-8 -*-
"""
/***************************************************************************
 Qimporter
                                 A QGIS plugin
 this plugin import the data with starting the program
 Generated by Plugin Builder: https://github.com/burak2188/qgis_importer
                              -------------------
        begin                : 2024-11-07
        git sha              : $Format:%H$
        copyright            : (C) 2024 by Burak Demir
        email                : burak-demir@live.de
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os
from PyQt5.QtCore import QTimer
from PyQt5.QtWidgets import QVBoxLayout, QAction, QDialog, QPushButton, QFileDialog
from qgis.core import QgsProject, QgsVectorLayer

# Reconfigurable Parameter
download_folder = "C:/Users/bdemir/Downloads/QGis"  # Ordner, der regelmäßig überprüft wird
download_interval = 60  # Interval in Sekunden, in dem der Ordner überprüft wird


class MyDialog(QDialog):
    def __init__(self, parent=None):
        super(MyDialog, self).__init__(parent)

        # Erstelle einen Button
        self.button = QPushButton('Datei auswählen')
        self.button.clicked.connect(self.select_file)

        # Füge den Button zum Dialog hinzu
        layout = QVBoxLayout()
        layout.addWidget(self.button)
        self.setLayout(layout)

    def select_file(self):
        # Öffne einen Datei-Dialog
        file_path, _ = QFileDialog.getOpenFileName(self, "Datei auswählen", "", "Alle Dateien (*)")
        if file_path:
            # Füge den Layer hinzu (hier musst du die entsprechende Funktion von QGIS verwenden, um den Layer  basierend auf dem Dateityp hinzuzufügen)
            # Beispiel für einen Vektorlayer:
            layer = QgsVectorLayer(file_path, "Neuer Layer", "ogr")
            QgsProject.current().addMapLayer(layer)


# Initialisiere das Plugin
class QGis_importer:
    def __init__(self, iface):
        self.action = None
        self.iface = iface

    def initGui(self):
        # Füge einen Menü-Eintrag hinzu
        self.action = QAction("Daten hochladen", self.iface.mainWindow())
        self.action.triggered.connect(self.run)
        self.iface.addToolBarIcon(self.action)

        # Automatisches Herunterladen beim Start von QGIS
        self.download_data()

    def unload(self):
        self.iface.removeToolBarIcon(self.action)

    def run(self):
        dialog = MyDialog()
        dialog.show()

    def download_data(self):
        try:
            # Suche nach neuen Dateien im angegebenen Ordner
            for file in os.listdir(download_folder):
                file_path = os.path.join(download_folder, file)
                # Überprüfe, ob die Datei bereits als Layer hinzugefügt wurde (optional)
                # ... (Hier kannst du eine Logik implementieren, um bereits hinzugefügte Dateien zu überspringen)

                # Füge den Layer hinzu (hier musst du die entsprechende Funktion von QGIS verwenden, um den Layer basierend auf dem Dateityp hinzuzufügen)
                # Beispiel für einen Vektorlayer:
                layer = QgsVectorLayer(file_path, "Neuer Layer", "ogr")
                QgsProject.current().addMapLayer(layer)

        except Exception as e:
            print(f"Fehler beim Überprüfen des Ordners: {e}")

        # Rufe die Funktion in einem bestimmten Intervall wieder auf
        QTimer.singleShot(download_interval * 1000, self.download_data)
